GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
4. Создать внешний репозиторий c названием JSON.
 New/Create repository "JSON"
 5. Клонировать репозиторий JSON на локальный компьютер.    
git clone https://github.com/siv11121993/JSON.git  
 6. Внутри локального JSON создать файл “new.json”.
cd JSON
cat > new.json
 7. Добавить файл под гит.
git add . 
 8. Закоммитить файл.
git commit -m "new.json"
 9. Отправить файл на внешний GitHub репозиторий.
git push  
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
 11. Отправить изменения на внешний репозиторий.
git add . 
git commit "new.json"
git push   
 12. Создать файл preferences.json
cat > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
vim skills.json  
 15. Отправить сразу 2 файла на внешний репозиторий.
git add *.json
git commit *.json
git push
 16. На веб интерфейсе создать файл bug_report.json.
Add file/create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
 21. Создать внешний репозиторий c названием XML.
Создаю репозиторий в вебе
 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/siv11121993/XML.git
 23. Внутри локального XML создать файл “new.xml”.
cd XML
cat > new.xml
 24. Добавить файл под гит.
git add new.xml
 25. Закоммитить файл.
git commit -m "new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml 
 28. Отправить изменения на внешний репозиторий.
git add new.xml 
git commit -m "new.xml"
git push
 29. Создать файл preferences.xml
cat > preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
vim skills.xml
 32. Сделать коммит в одну строку.
git add . | git commit -m "2 files"
 33. Отправить сразу 2 файла на внешний репозиторий.
git push  
 34. На веб интерфейсе создать файл bug_report.xml.

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML 
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
Создаю в веб интерфейсе репозиторий.
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/siv11121993/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt
 4. Добавить файл под гит.
git add . 
 5. Закоммитить файл.
git commit -m "WH_TXT"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt
 8. Отправить изменения на внешний репозиторий.
git add "new.txt"
git commit -m "changes"
git push
 9. Создать файл preferences.txt
touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
vim skills.txt
 12. Сделать коммит в одну строку.
git add * .txt | git commit -m "2 files .txt"
 13. Отправить сразу 2 файла на внешний репозиторий. 
git push
 14. На веб интерфейсе создать файл bug_report.txt.
Создаю на вебе документ 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сохраняю
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Модифицирую 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Делаю кормит 
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull
